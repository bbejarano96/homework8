Bryan Bejarano
Week #8 Part 2

----------------------------------------------------------------------

1. 
-Asynchronous Javascript and XML

2. 
-Extensible Markup Language

3. 
-XMLHttpRequest 

4. 
-AJAX allows the web page to make changes asynchronously, meaning it can update parts of the website without reloading the whole page. This is possible because AJAX exchanges data with the server behind the scenes. This better User Experience (UX). 

5. 
-the event occurs on page
-XMLHttpRequest object sends a request to the server
-server sends response back to the web page
-the response the server sent to the web page gets read by the JavaScript.
-Then the JavaScript executes the page to update.

6. 
-XMLHttpRequest

7. 
-The XMLHttpRequest object is used to exchange data with a web server asynchronously.   

8. 
-variable = new XMLHttpRequest();

9. 
-const xhttps = new XMLHttpRequest();

10. 
-XMLHttpRequest() constructor initializes an XMLHttpRequest() object. It  must be called before other method calls.

11.
-Live servers do not use http. Having https is a live server and is secured.

12. 
-new Keyword

13. 
-To create an instance of the ArchiveTemp.
ArchiveTemp() constructor function


14. 
-Create an object from a constructor function
-Sets the new object's internal, inaccessible, prototype propety to ber the constructor function's external, accessible prototype object.
-Executes the constructor function. 
-New keyword makes the keyword point to the newly created object. Constructor function refers to the function that follows the new keyword.
-Returns if the function doesn't return its own object.

15. 
xhttps.onreadystatechange = function () { 
        if (this.readyState === 4 && this.status === 200) { 
            console.log(this.responseText);
            console.log(JSON.parse(this.responseText));
            const data = JSON.parse(this.responseText);
            document.getElementById("movie-title").innerHTML = data.Title;
            document.getElementById("poster").src = data.Poster;
            document.getElementById("director").innerHTML = data.Director;
            document.getElementById("writer").innerHTML = data.Writer; 
            document.getElementById("genre").innerHTML = data.Genre;
            document.getElementById("plot").innerHTML = data.Plot;
        } 

16.
-XMLHttpRequest.open(): initializes a newly-created request, 
or re-initializes an existing one.

17.
-xhttps.open("GET", url, true);

18.
-"GET" is the method (the value of the first parameter passed to open()) we are using. We are requesting to "GET" data from the OMDB Api.
-url is the url we are sending our request.
-true, we are making the request asynchronously.

19.
-xhttps.send();

20.
The send() method accepts any parameter which lets you specify the request's body.  
If the request method is GET or HEAD, the body parameter is ignored, request body is null. 
The body parameter is not ignored with requests like PUT, this request modified the body 
content. GET/HEAD do not.
